[
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "apiConnection",
        "importPath": "services.apiConnection",
        "description": "services.apiConnection",
        "isExtraImport": true,
        "detail": "services.apiConnection",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "getSilverData",
        "importPath": "functions.getSilverData",
        "description": "functions.getSilverData",
        "isExtraImport": true,
        "detail": "functions.getSilverData",
        "documentation": {}
    },
    {
        "label": "pyarrow",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pyarrow",
        "description": "pyarrow",
        "detail": "pyarrow",
        "documentation": {}
    },
    {
        "label": "pyarrow.parquet",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pyarrow.parquet",
        "description": "pyarrow.parquet",
        "detail": "pyarrow.parquet",
        "documentation": {}
    },
    {
        "label": "getBronzeData",
        "importPath": "functions.getBronzeData",
        "description": "functions.getBronzeData",
        "isExtraImport": true,
        "detail": "functions.getBronzeData",
        "documentation": {}
    },
    {
        "label": "matplotlib.pyplot",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "matplotlib.pyplot",
        "description": "matplotlib.pyplot",
        "detail": "matplotlib.pyplot",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "loadBronzeData",
        "importPath": "functions.loadBronzeData",
        "description": "functions.loadBronzeData",
        "isExtraImport": true,
        "detail": "functions.loadBronzeData",
        "documentation": {}
    },
    {
        "label": "loadSilverData",
        "importPath": "functions.loadSilverData",
        "description": "functions.loadSilverData",
        "isExtraImport": true,
        "detail": "functions.loadSilverData",
        "documentation": {}
    },
    {
        "label": "loadGoldData",
        "importPath": "functions.loadGoldData",
        "description": "functions.loadGoldData",
        "isExtraImport": true,
        "detail": "functions.loadGoldData",
        "documentation": {}
    },
    {
        "label": "getGoldData",
        "importPath": "functions.getGoldData",
        "description": "functions.getGoldData",
        "isExtraImport": true,
        "detail": "functions.getGoldData",
        "documentation": {}
    },
    {
        "label": "renderizarGrafico",
        "importPath": "functions.renderizarGrafico",
        "description": "functions.renderizarGrafico",
        "isExtraImport": true,
        "detail": "functions.renderizarGrafico",
        "documentation": {}
    },
    {
        "label": "getBronzeData",
        "kind": 2,
        "importPath": "functions.getBronzeData",
        "description": "functions.getBronzeData",
        "peekOfCode": "def getBronzeData(symbol):\n    with open('data/bronze/' + symbol + '.json') as f:\n        data = json.load(f)\n    return data",
        "detail": "functions.getBronzeData",
        "documentation": {}
    },
    {
        "label": "getGoldData",
        "kind": 2,
        "importPath": "functions.getGoldData",
        "description": "functions.getGoldData",
        "peekOfCode": "def getGoldData():\n    df = pd.read_parquet(f'data/gold/dados_de_acoes.parquet')\n    return df",
        "detail": "functions.getGoldData",
        "documentation": {}
    },
    {
        "label": "getSilverData",
        "kind": 2,
        "importPath": "functions.getSilverData",
        "description": "functions.getSilverData",
        "peekOfCode": "def getSilverData():\n    df = pd.read_parquet(f'data/silver/dados_de_acoes.parquet')\n    return df",
        "detail": "functions.getSilverData",
        "documentation": {}
    },
    {
        "label": "loadBronzeData",
        "kind": 2,
        "importPath": "functions.loadBronzeData",
        "description": "functions.loadBronzeData",
        "peekOfCode": "def loadBronzeData(token, symbols):\n    for symbol in symbols:\n        params = {\n            \"api_token\": token,\n            \"symbols\": symbol,\n            \"date_from\": (datetime.now() - timedelta(days=30)).strftime(\"%Y-%m-%d\"),\n            \"date_to\": datetime.now().strftime(\"%Y-%m-%d\"),\n            \"format\": \"json\"\n        }\n        response = apiConnection(params)",
        "detail": "functions.loadBronzeData",
        "documentation": {}
    },
    {
        "label": "loadGoldData",
        "kind": 2,
        "importPath": "functions.loadGoldData",
        "description": "functions.loadGoldData",
        "peekOfCode": "def loadGoldData():\n    df_silver = getSilverData()\n    formatedData = []\n    for index in df_silver.index:\n        json = {\n            \"empresa\": df_silver['enterprise'][index],\n            \"dia\": df_silver['date'][index],\n            \"preco\": round(float((df_silver['low'][index] + df_silver['high'][index] + df_silver['close'][index]) / 3), 2)\n        }\n        formatedData.append(json)",
        "detail": "functions.loadGoldData",
        "documentation": {}
    },
    {
        "label": "loadSilverData",
        "kind": 2,
        "importPath": "functions.loadSilverData",
        "description": "functions.loadSilverData",
        "peekOfCode": "def loadSilverData(symbols):\n    bruteData = {}\n    for symbol in symbols:\n        bronzeData = getBronzeData(symbol)\n        bruteData[symbol] = bronzeData[\"data\"]\n    formatedData = []\n    for symbol in bruteData:\n        for data in bruteData[symbol]:\n            json = {\n                \"enterprise\": symbol,",
        "detail": "functions.loadSilverData",
        "documentation": {}
    },
    {
        "label": "renderizarGrafico",
        "kind": 2,
        "importPath": "functions.renderizarGrafico",
        "description": "functions.renderizarGrafico",
        "peekOfCode": "def renderizarGrafico(symbol, dados_filtrados):\n    dias = []\n    precos = []\n    for data in dados_filtrados['dia']:\n        data_obj = datetime.strptime(data, '%Y-%m-%dT%H:%M:%S.%fZ')\n        data_formatada = data_obj.strftime('%d/%m')\n        dias.append(data_formatada)\n    for preco in dados_filtrados['preco']:\n        precos.append(preco)\n    plt.plot(dias, precos, marker='o')",
        "detail": "functions.renderizarGrafico",
        "documentation": {}
    },
    {
        "label": "apiConnection",
        "kind": 2,
        "importPath": "services.apiConnection",
        "description": "services.apiConnection",
        "peekOfCode": "def apiConnection(params):\n    try:\n        response = requests.get(\"https://api.stockdata.org/v1/data/eod\", params=params)\n        return response.json()\n    except Exception as e:\n        return e",
        "detail": "services.apiConnection",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "index",
        "description": "index",
        "peekOfCode": "def main():\n    # loadBronzeData(token, symbols)\n    loadSilverData(symbols)\n    loadGoldData()\n    dados = getGoldData()\n    execucao = True\n    while execucao:\n        try:    \n            x=0\n            print()",
        "detail": "index",
        "documentation": {}
    },
    {
        "label": "symbols",
        "kind": 5,
        "importPath": "index",
        "description": "index",
        "peekOfCode": "symbols = [\"AAPL\", \"MSFT\", \"GOOGL\", \"AMZN\", \"TSLA\", \"NFLX\", \"NVDA\", \"PYPL\", \"SPOT\", \"SHOP\"]\ndef main():\n    # loadBronzeData(token, symbols)\n    loadSilverData(symbols)\n    loadGoldData()\n    dados = getGoldData()\n    execucao = True\n    while execucao:\n        try:    \n            x=0",
        "detail": "index",
        "documentation": {}
    }
]